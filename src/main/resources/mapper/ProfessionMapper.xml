<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssm.profession.mapper.ProfessionMapper">
    <resultMap id="ProfessionMap" type="Profession">
        <id property="professionId" column="profession_id"/>
        <result property="professionName" column="profession_name"/>
        <result property="professionAddress" column="profession_address"/>
        <result property="campusId" column="profession_campus_id"/>
        <result property="teacherId" column="profession_teacher_id"/>
    </resultMap>
    <update id="add" parameterType="Profession">
        insert into t_profession (profession_id,profession_name,profession_address,profession_campus_id,profession_teacher_id)
        values(#{professionId},#{professionName},#{professionAddress},#{campusId},#{teacherId})
    </update>
    <update id="edit" parameterType="Profession">
        update t_profession set profession_name=#{professionName},profession_address=#{professionAddress},
                                profession_campus_id=#{campusId},profession_teacher_id=#{teacherId}
        where profession_id=#{professionId}
    </update>
    <update id="delete" parameterType="String">
        delete from t_profession where profession_id in (${_value});
    </update>
    <select id="getTotal" parameterType="Map" resultType="Integer">
        select count(profession_id) from t_profession where 1=1
        <if test="professionName!=null">
            and profession_name like #{professionName}
        </if>
        <if test="professionId!=null">
            and profession_id like #{professionId}
        </if>
    </select>
    <select id="findAll" resultMap="ProfessionMap">
        select *
        from t_profession
    </select>
    <select id="findList" parameterType="Map" resultMap="ProfessionMap">
        select * from t_profession where 1=1
        <if test="professionName!=null">
            and profession_name like #{professionName}
        </if>
        <if test="professionId!=null">
            and profession_id like #{professionId}
        </if>
        order by profession_id
        limit #{offset},#{pageSize}
    </select>
    <select id="ifExist" parameterType="String" resultType="Integer">
        select count(profession_id) from t_profession where profession_id= #{professionId}
    </select>
    <select id="ifCampusExist" parameterType="String" resultType="Integer">
        select count(profession_id) from t_profession where profession_campus_id=#{campusId}
    </select>
    <select id="ifTeacherExist" parameterType="String" resultType="Integer">
        select count(profession_id) from t_profession where profession_teacher_id=#{teacherId}
    </select>
</mapper>